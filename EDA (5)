dimensions of dataset:

> dim(combined_data) 
[1] 6563   16


Summary statistics for numerical columns: No ID and year because irrelevant
> numerical_cols <- c("age", "birth_year_first_child")
> summary(combined_data[numerical_cols])
      age        birth_year_first_child
 Min.   :18.00   Min.   :1970          
 1st Qu.:32.00   1st Qu.:2002          
 Median :35.00   Median :2007          
 Mean   :34.44   Mean   :2007          
 3rd Qu.:38.00   3rd Qu.:2012          
 Max.   :40.00   Max.   :2023   



Summary statistics for ordinal columns:
> ordinal_cols <- c("social_contacts_satisfaction", "family_satisfaction", 
+                   "work_satisfaction", "colleague_atmosphere_satisfaction")
> summary(combined_data[ordinal_cols])
 social_contacts_satisfaction family_satisfaction work_satisfaction
 Min.   : 0.000               Min.   : 0.000      Min.   : 0.000   
 1st Qu.: 6.000               1st Qu.: 8.000      1st Qu.: 7.000   
 Median : 7.000               Median : 8.000      Median : 8.000   
 Mean   : 7.133               Mean   : 8.254      Mean   : 7.309   
 3rd Qu.: 8.000               3rd Qu.: 9.000      3rd Qu.: 8.000   
 Max.   :10.000               Max.   :10.000      Max.   :10.000   
 NA's   :905                  NA's   :185         NA's   :2256     
 colleague_atmosphere_satisfaction
 Min.   : 0.000                   
 1st Qu.: 7.000                   
 Median : 8.000                   
 Mean   : 7.575                   
 3rd Qu.: 9.000                   
 Max.   :10.000                   
 NA's   :2554                    


Summary statistics for categorical columns: no gender because gender=2 for every row
> categorical_cols <- c("partner", "church_member", "sports_club_member", 
+                       "political_party_member", "future_children", 
+                       "shared_friends", "yes_no_baby")


> # Frequency
> lapply(combined_data[categorical_cols], table)
$partner

   0    1 
 744 5305 

$church_member

   1    2 
1867 3937 

$sports_club_member

   0    1 
3910 1946 

$political_party_member

   0    1 
5736  120 

$future_children

   1    2    3 
1544 3660  718 

$shared_friends

   1    2    3    4    5 
1061 2103 1653 1124  154 

$yes_no_baby

   0    1 
6092  471 


> # Proportions
> lapply(combined_data[categorical_cols], function(x) prop.table(table(x)) * 100)
$partner
x
       0        1 
12.29955 87.70045 

$church_member
x
       1        2 
32.16747 67.83253 

$sports_club_member
x
       0        1 
66.76913 33.23087 

$political_party_member
x
       0        1 
97.95082  2.04918 

$future_children
x
       1        2        3 
26.07227 61.80344 12.12428 

$shared_friends
x
        1         2         3         4         5 
17.407711 34.503692 27.120591 18.441345  2.526661 

$yes_no_baby
x
        0         1 
92.823404  7.176596 




Data distribution of numerical variables: age
> ggplot(combined_data, aes(x = age)) +
+     geom_histogram(binwidth = 5, fill = "orange", alpha = 0.9) +
+     labs(x = "Age", y = "Frequency") +
+     scale_y_continuous(breaks = seq(0, 3000, by = 500), limits = c(0, 3000), expand = c(0, 0)) + 
+     theme_minimal()



Data distribution of ordinal variables
> ggplot(melted_data, aes(x = as.factor(Satisfaction_Level), fill = Variable)) +
+     geom_bar(alpha = 0.7, position = "stack") +
+     facet_wrap(~Variable, scales = "free_y") + 
+     labs(x = "Satisfaction Level", y = "Frequency") +
+     theme_minimal()



Data distribution of categorical variables
library(ggplot2)
library(reshape2)

# List of categorical variables
categorical_cols <- c("partner", "church_member", "sports_club_member", 
                      "political_party_member", "future_children", "shared_friends", "yes_no_baby")

# Reshape data into long format for faceted bar plots
categorical_data <- combined_data[, categorical_cols]
melted_data <- melt(categorical_data, variable.name = "Variable", value.name = "Category")

# Define custom labels for categories
category_labels <- list(
  partner = c(`0` = "No", `1` = "Yes"),
  church_member = c(`1` = "Yes", `2` = "No"),
  sports_club_member = c(`0` = "No", `1` = "Yes"),
  political_party_member = c(`0` = "No", `1` = "Yes"),
  future_children = c(`1` = "Yes", `2` = "No", `3` = "I don't know"),
  shared_friends = c(
    `1` = "Own Friends", 
    `2` = "Mostly Own",
    `3` = "Mostly Shared",
    `4` = "Shared Friends",
    `5` = "No Friends"
  ),
  yes_no_baby = c(`0` = "No", `1` = "Yes")
)

# Apply custom labels dynamically to each variable
melted_data$Category <- unlist(sapply(1:nrow(melted_data), function(i) {
  variable <- melted_data$Variable[i]
  value <- as.character(melted_data$Category[i])
  
  # If variable has custom labels, map the value; otherwise, leave unchanged
  if (variable %in% names(category_labels)) {
    return(category_labels[[variable]][value])
  } else {
    return(value)
  }
}))

# Faceted bar plot with updated labels and rotated x-axis text
ggplot(melted_data, aes(x = Category, fill = Variable)) +
  geom_bar(alpha = 0.7) +
  facet_wrap(~Variable, scales = "free_x") +
  labs(x = "Category", y = "Frequency") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1)) # Rotate x-axis labels






Check for missing values by variable type
# Check missing values for numerical, ordinal, and categorical separately
missing_numerical <- colSums(is.na(combined_data[, numerical_cols]))
missing_ordinal <- colSums(is.na(combined_data[, ordinal_cols]))
missing_categorical <- colSums(is.na(combined_data[, categorical_cols]))

# Combine missing value summaries into a single data frame
missing_summary <- data.frame(
  Variable = c(names(missing_numerical), names(missing_ordinal), names(missing_categorical)),
  Missing_Count = c(missing_numerical, missing_ordinal, missing_categorical),
  Type = c(rep("Numerical", length(missing_numerical)),
           rep("Ordinal", length(missing_ordinal)),
           rep("Categorical", length(missing_categorical)))
)

#tibble output
missing_summary <- as_tibble(missing_summary)
missing_summary
